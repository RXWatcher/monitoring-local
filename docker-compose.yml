version: '3.7'

services:
  traefik:
    container_name: traefik
    image: traefik:${IMG_VS_TRAEFIK}
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock:ro'
    command:
      - '--log.level=DEBUG'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--entrypoints.web.address=:80'
      - '--entrypoints.ssh.address=:2222'
      - '--metrics.prometheus=true'
      - '--metrics.prometheus.addEntryPointsLabels=true'
      - '--entryPoints.metrics.address=:8082'
      - '--metrics.prometheus.entryPoint=metrics'
    ports:
      - 2222:2222
      - 80:80
      - 8080:8080
      - 5432:5432

  whoami:
    container_name: simple-service
    image: traefik/whoami
    labels:
      - traefik.enable=true
      - traefik.http.routers.whoami.rule=Host(`whoami.localhost`)
      - traefik.http.routers.whoami.entrypoints=web

  cadvisor:
    container_name: cadvisor
    image: gcr.io/cadvisor/cadvisor:${IMG_VS_CADVISOR}
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    labels:
      - traefik.enable=true
      - traefik.http.routers.cadvisor.rule=Host(`cadvisor.localhost`)
      - traefik.port=8080

  prometheus:
    container_name: prometheus
    image: prom/prometheus:${IMG_VS_PROMETHEUS}
    restart: always
    depends_on:
      - cadvisor
    #ports:
    #  - 9090:9090
    #networks:
    #  - mon-net
    environment:
      - TZ=${DKR_TZ}
      - VIRTUAL_PORT=9090
      - VIRTUAL_PROTO=http
    volumes:
      - ${DKR_DATA_DIR}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${DKR_DATA_DIR}/prometheus/alert.rules.yml:/etc/prometheus/alert.rules.yml
      - ${DKR_DATA_DIR}/prometheus/targets:/etc/prometheus/targets
      - prometheus_data:/prometheus
    command:
      - '--log.level=info'
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`prometheus.localhost`)
      - traefik.port=9090

  pushgateway:
    container_name: pushgateway
    image: prom/pushgateway:${IMG_VS_PUSHGATEWAY}
    restart: unless-stopped
    depends_on:
      - cadvisor
    #ports:
    #  - 9091:9091
    #networks:
    #  - mon-net
    command:
      - '--log.level=info'
      - '--web.enable-admin-api'
      - '--web.enable-lifecycle'
    labels:
      - traefik.enable=true
      - traefik.http.routers.pushgateway.rule=Host(`pushgateway.localhost`)
      - traefik.port=9091

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:${IMG_VS_ALERTMANAGER}
    restart: always
    depends_on:
      - cadvisor
    #ports:
    #  - 9093:9093
    #networks:
    #  - mon-net
    environment:
      - TZ=${DKR_TZ}
    volumes:
      - ${DKR_DATA_DIR}/prometheus/alertmanager.yml:/alertmanager.yml
    command:
      - '--config.file=/alertmanager.yml'
      - '--storage.path=/alertmanager'
    labels:
      - traefik.enable=true
      - traefik.http.routers.alertmanager.rule=Host(`alertmanager.localhost`)
      - traefik.port=9093

  grafana:
    container_name: grafana
    image: grafana/grafana:${IMG_VS_GRAFANA}
    restart: always
    depends_on:
      - cadvisor
      - prometheus
    #ports:
    #  - 3000:3000
    #networks:
    #  - mon-net
    environment:
      - TZ=${DKR_TZ}
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
      - VIRTUAL_PORT=3000
      - VIRTUAL_PROTO=http
    volumes:
      - ${DKR_DATA_DIR}/grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ${DKR_DATA_DIR}/grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ${DKR_DATA_DIR}/grafana/provisioning/notifiers:/etc/grafana/provisioning/notifiers
      - ${DKR_DATA_DIR}/grafana/provisioning/plugins:/etc/grafana/provisioning/plugins
      - grafana_data:/var/lib/grafana
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`grafana.localhost`)
      - traefik.port=3000

  blackbox:
    container_name: blackbox
    image: prom/blackbox-exporter:${IMG_VS_BLACKBOX}
    restart: always
    depends_on:
      - cadvisor
      - prometheus
      - grafana
    #ports:
    #  - 9115:9115
    #networks:
    #  - mon-net
    environment:
      - TZ=${DKR_TZ}
    volumes:
      - ${DKR_DATA_DIR}/exporter/blackbox:/config
    command:
      - '--log.level=debug'
      - '--config.file=/config/blackbox.yml'
#      - '--web.listen-address=":9115"'
#      - '--config.check'
    labels:
      - traefik.enable=true
      - traefik.http.routers.blackbox.rule=Host(`blackbox.localhost`)
      - traefik.port=9115

  web-httpd:
    container_name: web-httpd
    image: httpd:${IMG_VS_WEB_HTTPD}
    #ports:
    #  - 5000:80
    #networks:
    #  - mon-net
    labels:
      - traefik.enable=true
      - traefik.http.routers.web-httpd.rule=Host(`web-httpd.localhost`)
      - traefik.port=80

  web-nginx:
    container_name: web-nginx
    image: nginx:${IMG_VS_WEB_NGINX}
    #ports:
    #  - 5001:80
    #networks:
    #  - mon-net
    labels:
      - traefik.enable=true
      - traefik.http.routers.web-nginx.rule=Host(`web-nginx.localhost`)
      - traefik.port=80

volumes:
  prometheus_data:
    external: false
  grafana_data:
    external: false

networks:
#  mon-net:
  default:
    external: false
    name: traefik-net
